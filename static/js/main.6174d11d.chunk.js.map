{"version":3,"sources":["components/clock.tsx","App.tsx","index.tsx"],"names":["timeString","date","toUTCString","slice","Clock","state","today","Date","timerdId","this","window","setInterval","setState","_","prevState","console","info","clearInterval","clockName","props","className","Component","getRandomName","value","now","toString","App","hasClock","clockNameId","addClock","removeClock","updateClock","document","addEventListener","debug","removeEventListener","React","ReactDOM","render","getElementById"],"mappings":"sNAEMA,EAAa,SAACC,GAAD,OAAwBA,EAAKC,cAAcC,OAAO,IAAK,IAU7DC,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,SAAW,EALb,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,SAAWE,OAAOC,aAAY,WACjC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,SAC1B,OAVP,gCAaE,SAAmBM,EAAUC,GACTL,KAAKJ,MAAfC,QAEMQ,EAAUR,OACtBI,OAAOK,QAAQC,KAAKhB,EAAWS,KAAKJ,MAAMC,UAjBhD,kCAqBE,WACEI,OAAOO,cAAcR,KAAKD,YAtB9B,oBAyBE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAY,EAAcT,KAAKU,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGpB,EAAWM,YAtCtB,GAA2Be,aCR3B,SAASC,IACP,IAAMC,EAAQhB,KAAKiB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAyB,CACvBsB,UAAU,EACVT,UAAW,WAHf,EAMEU,YAAc,EANhB,EA+BEC,SAAW,WACT,EAAKjB,SAAS,CAAEe,UAAU,KAhC9B,EAmCEG,YAAc,WACZ,EAAKlB,SAAS,CAAEe,UAAU,KApC9B,EAuCEI,YAAc,WACZ,EAAKnB,SAAS,CAAEM,UAAWI,OAxC/B,uDAQE,WAAqB,IAAD,OAClBU,SAASC,iBAAiB,cAAexB,KAAKoB,UAC9CG,SAASC,iBAAiB,QAASxB,KAAKqB,aAExCrB,KAAKmB,YAAclB,OAAOC,aAAY,WACpC,EAAKoB,gBACJ,QAdP,gCAiBE,SAAmBlB,EAAUC,GAC3B,MAAgCL,KAAKJ,MAA7BsB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAEdA,IAAcJ,EAAUI,WAAaS,GACvCjB,OAAOK,QAAQmB,MAAf,uBAAqCpB,EAAUI,UAA/C,eAA+DA,MArBrE,kCAyBE,WACEc,SAASG,oBAAoB,QAAS1B,KAAKqB,aAC3CE,SAASG,oBAAoB,cAAe1B,KAAKoB,UACjDnB,OAAOO,cAAcR,KAAKmB,eA5B9B,oBA2CE,WACE,MAAgCnB,KAAKJ,MAA7BsB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,UAElB,OACE,sBAAKE,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOT,UAAWA,WAlDvC,GAAyBkB,IAAMf,WCZ/BgB,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.6174d11d.chunk.js","sourcesContent":["import { Component } from 'react';\n\nconst timeString = (date: Date): string => date.toUTCString().slice(-12, -4);\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerdId = 0;\n\n  componentDidMount() {\n    this.timerdId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(_: never, prevState: State) {\n    const { today } = this.state;\n\n    if (today !== prevState.today) {\n      window.console.info(timeString(this.state.today));\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerdId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {timeString(today)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.addClock);\n    document.addEventListener('click', this.removeClock);\n\n    this.clockNameId = window.setInterval(() => {\n      this.updateClock();\n    }, 3300);\n  }\n\n  componentDidUpdate(_: never, prevState: State) {\n    const { hasClock, clockName } = this.state;\n\n    if (clockName !== prevState.clockName && hasClock) {\n      window.console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.removeClock);\n    document.removeEventListener('contextmenu', this.addClock);\n    window.clearInterval(this.clockNameId);\n  }\n\n  addClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  removeClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  updateClock = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}